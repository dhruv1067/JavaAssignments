Ans 1: The technique of creating a new class by using an existing class functionality is called inheritance in Java. In other words, inheritance is a process where a child class acquires all the properties and behaviours of the parent class.

Ans 2:  A class from where a subclass inherits features is called superclass. It is also called base class or parent class. A class that inherits all the members (fields, method, and nested classes) from another class is called a subclass. It is also called a derived class, child class, or extended class. 

Ans 3:  Inheritance can be implemented or achieved by using two keywords:
 extends: extends is a keyword that is used for developing the inheritance between two classes and two interfaces.
 implements: implements keyword is used for developing the inheritance between a class and interface.

Ans 4:  Polymorphism in OOP is the ability of an entity to take several forms. In other words, it refers to the ability of an object (or a reference to an object) to take different forms of objects. It allows a common data-gathering message to be sent to each class. Polymorphism encourages what is called ‘extendibility’ which means an object or a class can have its uses extended.

Ans 6:  Abstraction is nothing but the quality of dealing with ideas rather than events. It basically deals with hiding 
the internal details and showing the essential things to the user.
 Abstract class Sports {   // abstract class sports
 Abstract void jump();    // abstract method
 }

Ans 7: The abstract method is incomplete while the final method is regarded as complete. The only way to use an abstract method is by overriding it, but you cannot override a final method in Java.

Ans 8:  A class declared with the final keyword is known as the final class. A final class can’t be inherited by subclasses. By using the final class, we can restrict the inheritance of the class. We can create a class as a final class only if it is complete in nature, which means it must not be an abstract class. In java, all the wrapper classes are final classes like String, Integer, etc.